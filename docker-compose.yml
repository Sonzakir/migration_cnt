version: '3.9'



services:
  ### START INIT ###
  ### INIT CONTAINER###
  init:
    build:
      context: ./
      dockerfile: Dockerfile_InitContainer
    depends_on:
      java_db:
        condition: service_healthy
    environment:
      DEV_STAGE : TRUE
      DB_SERVER_NAME : java_db
      DB_ADMIN_USER : postgres
      DB_ADMIN_PASSWORD : postgres
      DB_APP_ADMIN_USER : app_admin
      DB_APP_ADMIN_PASS : app_admin
      DB_APP_USER : app_user
      DB_APP_PASS : app_user
  ### END INIT ###


  # java_app (spring boot )
  java_app:
    container_name: java_app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - DB_SERVER_NAME=java_db
      - DB_ADMIN_USER=postgres
      - DB_ADMIN_PASSWORD=postgres
      - DB_APP_USER=app_user
      - DB_APP_PASS=app_user
      - DATABASE_URL=jdbc:postgresql://java_db:5432/postgres
      - DATABASE_USERNAME=postgres
      - DATABASE_PASSWORD=postgres
    depends_on:
      java_db:
        condition: service_healthy
      init:
        condition: service_completed_successfully


  #postgres
  java_db:
    container_name: java_db
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD : postgres
      POSTGRES_USER : postgres
      POSTGRES_DB  : postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      retries: 5


    

  # ui
  angular_app:
    container_name: angular_app
    build:
      context: C:\Users\fkiraz\Documents\Angular_Projects\UI-DE-TELEFONBUCH
    ports:
      - "4200:4200"
    depends_on:
      - java_app

volumes:
  pgdata: {}





